apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: elastic-agent
  namespace: elastic-ds-system
  labels:
    app: elastic-agent
spec:
  selector:
    matchLabels:
      app: elastic-agent
  template:
    metadata:
      labels:
        app: elastic-agent
    spec:
      # Tolerations are needed to run Elastic Agent on Kubernetes control-plane nodes.
      # Agents running on control-plane nodes collect metrics from the control plane components (scheduler, controller manager) of Kubernetes
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: elastic-agent                                                             
      hostNetwork: true
      # 'hostPID: true' enables the Elastic Security integration to observe all process exec events on the host.
      # Sharing the host process ID namespace gives visibility of all processes running on the same host.
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: elastic-agent
          image: nexus.dspace.kt.co.kr/icis/elastic-agent:8.9.2                                     
          env:
            # Set to 1 for enrollment into Fleet server. If not set, Elastic Agent is run in standalone mode
            - name: FLEET_ENROLL                                                                                    ## Fleet-managed Elastic Agent으로 사용한다는 설정(1=True)
              value: "1"
            # Set to true to communicate with Fleet with either insecure HTTP or unverified HTTPS
            - name: FLEET_INSECURE                                                                                  ## 인증서 검증 절차 스킵
              value: "true"
            # Fleet Server URL to enroll the Elastic Agent into
            # FLEET_URL can be found in Kibana, go to Management > Fleet > Settings
            - name: FLEET_URL                                                                                       ## Fleet Server service host와 port 혹은 route URL로 설정
              # value: "https://fleet.dev.icis.kt.co.kr"
              value: "https://fleet-server.elastic-system.svc:8220"
            # Elasticsearch API key used to enroll Elastic Agents in Fleet (https://www.elastic.co/guide/en/fleet/current/fleet-enrollment-tokens.html#fleet-enrollment-tokens)
            # If FLEET_ENROLLMENT_TOKEN is empty then KIBANA_HOST, KIBANA_FLEET_USERNAME, KIBANA_FLEET_PASSWORD are needed
            - name: FLEET_ENROLLMENT_TOKEN                                                                          ## 위에서 발급한 enroll token로 설정
              value: "SVIzQVQ0Y0JNTFNTNHd1aU5CbU06S0hHMlAyQXpTdksteUphZ2M4Uy12UQ=="
            - name: KIBANA_HOST                                                                                     ## Kibana serivce host와 port 혹은 route URL로 설정
              value: "https://kibana-kibana.elastic-system.svc:5601"
            # The basic authentication username used to connect to Kibana and retrieve a service_token to enable Fleet
            - name: KIBANA_FLEET_USERNAME                                                                           ## Elasticsearch 계정으로 설정
              value: "elastic"
            # The basic authentication password used to connect to Kibana and retrieve a service_token to enable Fleet
            - name: KIBANA_FLEET_PASSWORD                                                                           ## 위 계정의 비밀번호로 설정
              value: "new1234!"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            runAsUser: 0
            privileged: true
          resources:
            limits:                                                                                                 ## 수집하는 데이터량이 많을수록 스팩향상 필요
              cpu: 2                                                                                                ## Fleet-managed Elastic Agent은  자원제한 기능이 없어 limit 도달 시 정상작동하지 않을 수 있음
              memory: 1500Mi
            requests:
              cpu: 0.1
              memory: 400Mi
          volumeMounts:
            - name: proc
              mountPath: /hostfs/proc
              readOnly: true
            - name: cgroup
              mountPath: /hostfs/sys/fs/cgroup
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
            # - name: etc-full
            #   mountPath: /hostfs/etc
            #   readOnly: true
            # - name: var-lib
            #   mountPath: /hostfs/var/lib
            #   readOnly: true
            # - name: etc-mid
            #   mountPath: /etc/machine-id
            #   readOnly: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # The following volumes are needed for Cloud Security Posture integration (cloudbeat)
        # If you are not using this integration, then these volumes and the corresponding
        # mounts can be removed.
        # - name: etc-full
        #   hostPath:
        #     path: /etc
        # - name: var-lib
        #   hostPath:
        #     path: /var/lib
        # # Mount /etc/machine-id from the host to determine host ID
        # # Needed for Elastic Security integration
        # - name: etc-mid
        #   hostPath:
        #     path: /etc/machine-id
        #     type: File
      imagePullSecrets:                                                                                             ## imagepullsecret 설정
        - "name": "dspace-nexus"
      nodeSelector:                                                                                                 ## node selector 설정
        kubernetes.io/os: linux
